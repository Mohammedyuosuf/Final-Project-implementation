package com.example.yousuf_blooddonationapp.manager;

import androidx.annotation.NonNull;
import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;

import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.example.yousuf_blooddonationapp.CheckUser;
import com.example.yousuf_blooddonationapp.R;
import com.example.yousuf_blooddonationapp.UserInformation;
import com.example.yousuf_blooddonationapp.UserInformationM;
import com.example.yousuf_blooddonationapp.donor.AddApointment;
import com.example.yousuf_blooddonationapp.donor.AddFeedback;
import com.example.yousuf_blooddonationapp.donor.CheckNotification;
import com.example.yousuf_blooddonationapp.donor.DonationStatus;
import com.example.yousuf_blooddonationapp.donor.DonorDeleteAccount;
import com.example.yousuf_blooddonationapp.donor.DonorHomePage;
import com.example.yousuf_blooddonationapp.donor.DonorUpdateProfile;
import com.example.yousuf_blooddonationapp.donor.DonorViewProfile;
import com.example.yousuf_blooddonationapp.donor.ForgetPassword;
import com.example.yousuf_blooddonationapp.donor.ViewAppointment;
import com.example.yousuf_blooddonationapp.donor.ViewHistory;
import com.google.android.material.navigation.NavigationView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class ManagerHomePage extends AppCompatActivity {

    DrawerLayout drawerLayout;
    NavigationView navigationView;
    Toolbar toolbar;
    FirebaseAuth firebaseAuth;

    Button m_view_ap, send_noti, del_noti, view_storage, view_feedback,  m_view_profile, m_delete_account, m_logout_d;

    public static final String SHARED_PREFS= "sharedPrefs";
    FirebaseUser user;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_manager_home_page);


        drawerLayout= findViewById(R.id.drawerlayout1);
        navigationView= findViewById(R.id.navigationview1);
        toolbar= findViewById(R.id.toolbar1);

        setSupportActionBar(toolbar);
        firebaseAuth= FirebaseAuth.getInstance();
        user = firebaseAuth.getCurrentUser();

        m_view_ap= findViewById(R.id.m_view_ap);
        send_noti= findViewById(R.id.send_noti);
        del_noti= findViewById(R.id.delete_noti);
        view_storage= findViewById(R.id.view_storage);
        view_feedback = findViewById(R.id.view_feedback);
        m_view_profile= findViewById(R.id.m_view_profile);
        m_delete_account= findViewById(R.id.m_delete_account);

        m_logout_d= findViewById(R.id.m_logout_d);

        //to access header to display user name
        View headerView = navigationView.getHeaderView(0);
        TextView navUsername = (TextView) headerView.findViewById(R.id.m_name);
        //dislay name end of header


        final DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Users").child("Manager").child(user.getUid()).child("Profile");
        ref.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                UserInformationM userInformation = dataSnapshot.getValue(UserInformationM.class);
                navUsername.setText(userInformation.getUserName());
            }

            @Override
            public void onCancelled(DatabaseError databaseError) {
                Toast.makeText(ManagerHomePage.this, databaseError.getCode(), Toast.LENGTH_SHORT).show();
            }
        });


        ActionBarDrawerToggle toggle= new ActionBarDrawerToggle(this,drawerLayout,toolbar,R.string.navigation_open, R.string.navigation_close);

        drawerLayout.addDrawerListener(toggle);
        toggle.syncState();

        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
            @Override
            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                int id= item.getItemId();

                if (id == R.id.home_menu1) {
                    startActivity(new Intent(ManagerHomePage.this, ManagerHomePage.class));
                    finish();

                } else if (id == R.id.m_view_ap_menu) {
                    startActivity(new Intent(ManagerHomePage.this, ViewAllApointment.class));
                    finish();

                } else if (id == R.id.m_send_menu) {
                    startActivity(new Intent(ManagerHomePage.this, SendNotification.class));
                    finish();

                } else if (id == R.id.m_del_noti_menu) {
                    startActivity(new Intent(ManagerHomePage.this, DeleteNotification.class));
                    finish();

                } else if (id == R.id.m_view_feed_menu) {
                    startActivity(new Intent(ManagerHomePage.this, ViewFeedback.class));
                    finish();

                } else if (id == R.id.m_view_bank_menu) {
                    startActivity(new Intent(ManagerHomePage.this, BankStorage.class));
                    finish();

                } else if (id == R.id.m_password_menu) {
                    startActivity(new Intent(ManagerHomePage.this, ForgetPassword1.class));
                    finish();

                } else if (id == R.id.m_delete_menu) {
                    startActivity(new Intent(ManagerHomePage.this, ManagerDeleteAccount.class));
                    finish();

                } else if (id == R.id.m_view_menu) {
                    startActivity(new Intent(ManagerHomePage.this, ManagerViewProfile.class));
                    finish();

                } else if (id == R.id.m_edit_menu) {
                    startActivity(new Intent(ManagerHomePage.this, ManagerUpdateProfile.class));
                    finish();

                }  else if (id == R.id.m_logout_menu) {
                    SharedPreferences sharedPreferences = getSharedPreferences(SHARED_PREFS, MODE_PRIVATE);
                    SharedPreferences.Editor editor= sharedPreferences.edit();
                    editor.clear();
                    editor.commit();
                    firebaseAuth.signOut();
                    finish();
                    Toast.makeText(ManagerHomePage.this, "Account Logout", Toast.LENGTH_SHORT).show();
                    startActivity(new Intent(ManagerHomePage.this, CheckUser.class));
                }
                return false;
            }
        });

        m_view_ap.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ManagerHomePage.this, ViewAllApointment.class));
                finish();
            }
        });

        send_noti.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ManagerHomePage.this, SendNotification.class));
                finish();
            }
        });

        del_noti.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ManagerHomePage.this, DeleteNotification.class));
                finish();
            }
        });

        view_storage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ManagerHomePage.this, BankStorage.class));
                finish();
            }
        });

        view_feedback.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ManagerHomePage.this, ViewFeedback.class));
                finish();
            }
        });

        m_view_profile.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ManagerHomePage.this, ManagerViewProfile.class));
                finish();
            }
        });

        m_delete_account.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ManagerHomePage.this, ManagerDeleteAccount.class));
                finish();
            }
        });


        m_logout_d.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SharedPreferences sharedPreferences = getSharedPreferences(SHARED_PREFS, MODE_PRIVATE);
                SharedPreferences.Editor editor= sharedPreferences.edit();
                editor.clear();
                editor.commit();
                firebaseAuth.signOut();
                finish();
                Toast.makeText(ManagerHomePage.this, "Account Logout", Toast.LENGTH_SHORT).show();
                startActivity(new Intent(ManagerHomePage.this, CheckUser.class));
            }
        });

        //button clicklistener
    }

    @Override
    public void onBackPressed() {
        backButtonHandler();
    }

    public void backButtonHandler() {
        AlertDialog.Builder alertDialog = new AlertDialog.Builder(
                ManagerHomePage.this);
        // Setting Dialog Title
        alertDialog.setTitle("Leave application?");
        // Setting Dialog Message
        alertDialog.setMessage("Are you sure you want to leave the application?");
        // Setting Icon to Dialog
        alertDialog.setIcon(R.drawable.logo);
        // Setting Positive "Yes" Button
        alertDialog.setPositiveButton("Exit",
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int which) {
                        finish();
                    }
                });
        // Setting Negative "NO" Button
        alertDialog.setNegativeButton("NO",
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int which) {
                        // Write your code here to invoke NO event
                        dialog.cancel();
                    }
                });
        // Showing Alert Message
        alertDialog.show();
    }
}
